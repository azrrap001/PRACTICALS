if (!requireNamespace("usethis", quietly = TRUE)) {
install.packages("usethis")
}
gert::git_config_global()
usethis::use_git()
install.packages("quarto")
quarto::quarto_render()
quarto preview answers.qmd --to html --no-watch-inputs --no-browse
usethis::proj_get()
quarto::quarto_render()
getwd()
setwd("C:/Users/Student/OneDrive - University of Cape Town/AZRRAP001/Honours/STATISTICAL COMPUTING/PRAC1/practical_1")
quarto render answers.qmd --to html --execute-daemon=false
usethis::create_project("C:/Users/Student/OneDrive - University of Cape Town/AZRRAP001/Honours/")
getwd()
version
quarto::quarto_render()
install.packages("quarto")
library(quarto)
quarto::quarto_render()
quarto::render()
#| echo: false
#|
if (!requireNamespace("usethis", quietly = TRUE)) {
install.packages("usethis")
}
gert::git_config_global()
gert::git_config_global()
gert::git_config_global()
usethis::use_git()
usethis::use_git()
if (!requireNamespace("usethis", quietly = TRUE)) {
install.packages("usethis")
}
gert::git_config_global()
# set your username and your email address
username <- "azrrap001"  # replace NULL with e.g. "Miguel Rodo" (be sure to include the quotes)
email <- "azrrap001@myuct.ac.za" # replace NULL with e.g. "miguel.rodo@uct.ac.za"
stopifnot(!is.null(username)) # just checking you set this
stopifnot(!is.null(email))
gert::git_config_global_set("user.name",  username)
gert::git_config_global_set("user.email", email)
usethis::use_git()
gert::git_config_global()
# set your username and your email address
username <- "azrrap001"  # replace NULL with e.g. "Miguel Rodo" (be sure to include the quotes)
email <- "azrrap001@myuct.ac.za" # replace NULL with e.g. "miguel.rodo@uct.ac.za"
stopifnot(!is.null(username)) # just checking you set this
stopifnot(!is.null(email))
gert::git_config_global_set("user.name",  username)
gert::git_config_global_set("user.email", email)
usethis::use_git()
if (!requireNamespace("projrsimple", quietly = TRUE)) {
if (!requireNamespace("remotes", quietly = TRUE)) {
install.packages("remotes")
}
remotes::install_github("MiguelRodo/projrsimple")
}
projrsimple::projr_run()
gert::git_config_global()
gert::git_config_global()
# set your username and your email address
username <- "azrrap001"  # replace NULL with e.g. "Miguel Rodo" (be sure to include the quotes)
email <- "azrrap001@myuct.ac.za" # replace NULL with e.g. "miguel.rodo@uct.ac.za"
stopifnot(!is.null(username)) # just checking you set this
stopifnot(!is.null(email))
gert::git_config_global_set("user.name",  username)
gert::git_config_global_set("user.email", email)
usethis::use_git()
usethis::use_git()
gert::git_config_global()
if (!requireNamespace("usethis", quietly = TRUE)) {
install.packages("usethis")
}
gert::git_config_global()
usethis::create_github_token()
usethis::create_github_token()
gitcreds::gitcreds_set()
if (!requireNamespace("projrsimple", quietly = TRUE)) {
if (!requireNamespace("remotes", quietly = TRUE)) {
install.packages("remotes")
}
remotes::install_github("MiguelRodo/projrsimple")
}
projrsimple::projr_init()
R version 4.4.2 (2024-10-31 ucrt) -- "Pile of Leaves"
projrsimple::projr_run()
projrsimple::projr_init()
usethis::use_git_remote("origin", url = NULL,
overwrite = TRUE)
projrsimple::projr_init()
projrsimple::projr_run()
quarto::quarto_render()
usethis::use_git()
gert::git_config_global()
usethis::use_git()
`[Methods, timeline, team, data sources, software/tools, etc.]`
```{}
getwd()
knitr::opts_chunk$set(echo = TRUE)
set.seed(123)
m <- matrix(ceiling(10*runif(16)), nrow = 4)
m
(m <- matrix(ceiling(10*runif(16)), nrow = 4))
s <- matrix(ceiling(10*runif(16)), ncol = 4)
m;s
diag(1:4)
diag(1:4, 7)
m <- matrix(ceiling(10*runif(17)), nrow = 4)
m <- matrix(ceiling(10*runif(21)), nrow = 4)
s <- matrix(ceiling(10*runif(16)), ncol = 4)
m;s
m <- matrix(ceiling(10*runif(17)), nrow = 4)
s <- matrix(ceiling(10*runif(16)), ncol = 4)
m;s
m <- matrix(ceiling(10*runif(20)), nrow = 4)
m
m <- matrix(ceiling(10*runif(21)), nrow = 4)
m
m[lower.tri(m)] <- 0
m
lower.tri(m)
m[upper.tri(m)] <- 0
m
diag(1, 5) #repeats 1
a <- matrix(rep(1:3, 4), nrow = 3)
b <- matrix(rep(1:4, 3), nrow = 3, byrow = T)
a ; b
a + b
5*b
sum(diag(m))
a ; b
a%*%b
b <- t(b)
a;b
a%*%b
c <- matrix(1:10)    #column vector by default
r <- t(matrix(1:10)) #transpose vector to create row
c;r
c%*%r #10x10
r%*%c #sum of squares of all values 1 - 10   #compare with for-loop
A <- matrix(ceiling(10*runif(9)), nrow = 3)
B <- matrix(ceiling(10*runif(9)), nrow = 3)
C <- matrix(ceiling(10*runif(9)), nrow = 3)
A;B;C
(A + B) + C == A + (B + C)
(A%*%B)%*%C == A%*%(B%*%C)
(A + B) + C == A + (B + C)
(A%*%B)%*%C == A%*%(B%*%C)
A%*%B == B%*%A
a <- matrix(rep(1:3, 4), nrow = 3)
b <- matrix(rep(1:4, 3), nrow = 3, byrow = T)
a;b
a*b
